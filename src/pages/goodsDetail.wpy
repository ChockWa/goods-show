<!-- 商品详情 -->
<template>
  <view style="height:{{winHeight}}rpx;overflow:hidden;">
    <import src="../plugins/wxParse/wxParse.wxml" />
    <!--index.wxml-->
    <swiper indicator-dots="true" autoplay="true" interval="5000" duration="500" indicator-active-color="#ccc" class="swiper">
      <block wx:for="{{images}}" key="item" item="item" wx:key="key">
        <swiper-item>
          <image src="{{item}}" class="slide-image" data-src="{{item}}" @tap="previewImage" />
        </swiper-item>
      </block>
    </swiper>
    <view class="details-msg">
      <view class="details-title">{{detail.name}}</view>
      <view class="details_pinfo">
        <text class="price">￥{{detail.price}}</text>
      </view>
    </view>
    <wux-white-space size="default" bodyStyle="background-color: #f3f3f1;" />
    <wux-tabs theme="dark" controlled current="{{ currentTab }}" bindchange="tabChange">
      <wux-tab key="goodsInfo" title="商品信息"></wux-tab>
      <wux-tab key="question" title="常见问题"></wux-tab>
    </wux-tabs>
    <wux-white-space size="default" bodyStyle="background-color: #f3f3f1;margin-top:25rpx;" />
    <view wx:if="{{currentTab === 'goodsInfo'}}">
      <wux-wing-blank size="large">
        <view class="desc-title">商品描述</view>
        <wux-divider show-text="{{ false }}" />
        <view class="desc-desc">{{detail.description}}</view>
      </wux-wing-blank>
      <wux-white-space size="small" bodyStyle="background-color: #f3f3f1;margin-top:38rpx;" />
      <wux-wing-blank size="large">
        <view class="desc-title">商品详情</view>
        <wux-divider show-text="{{ false }}" />
        <block wx:for="{{images}}">
          <image src="{{item}}" class="detail-image" data-src="{{item}}" @tap="previewImage" />
        </block>
      </wux-wing-blank>
    </view>
    <view wx:if="{{currentTab === 'question'}}">常见问题</view>
    <view class="detail-bottom" wx:if="{{hidden}}">
      <view class="bottom-box">
        <view class="c-fav">
          <view class="c-fav-item" @tap="favAction">
            <view class="c-star-area">
              <ul>
                <li class="c-star{{isFav?'-activity':''}}">&#9733;</li>
              </ul>
            </view>
            <view class="c-fav-font" wx:if="{{!isFav}}">收藏</view>
            <view class="c-fav-font{{isFav?'-activity':''}}" wx:if="{{isFav}}">已收藏</view>
          </view>
        </view>
        <view class="c-add-cart-area">
          <!-- <button class="c-add-cart-btn" bindtap="takeCartHandle">加入购物车</button> -->
          <wux-button class="c-add-cart-btn" block bind:click="takeCartHandle" type="assertive">加入购物车</wux-button>
        </view>
      </view>
    </view>
    <view class='popup' wx:if="{{!hidden}}" animation="{{animationData}}">
      <view class='pop-header'>
        <view class='img'>
          <image src='{{detail.cover}}'></image>
        </view>
        <view class='goods'>
          <view class="name">{{detail.name}}</view>
          <view class="price">￥{{price}}</view>
          <view class="sku-desc" wx:if="{{price === ''}}">请选择<text wx:for="{{detail.goodsSkuList}}" wx:for-index="index" wx:key="index">{{item.name}}<text wx:if="{{index+1!=detail.goodsSkuList.length}}" wx:for-index="index" wx:key="index">、</text></text>
          </view>
          <view class="sku-desc" wx:if="{{price !== ''}}">已选：{{chooseSkuStr}}</view>
        </view>
        <view class='close-icon' bindtap='closeTakeCartDialog'>
          <wux-icon size="16" color="#ccc" type="ios-close-circle" />
        </view>
        <wux-divider show-text="{{ false }}" />
      </view>
      <scroll-view scroll-y class='pop-content'>
        <wux-wing-blank size="large">
          <view class="sku-box" wx:for="{{detail.goodsSkuList}}" item="item" wx:key="key" wx:for-index="ex">
            <wux-divider show-text="{{ false }}" />
            <view class="sku-item">
              <text class="sku-name">{{item.name}}</text>
              <view class="sku-items">
                <view style="{{chooseColorObject['style'+item.id]}}" wx:for="{{item.list}}" @tap.stop="chooseSku" data-itemkey="{{item.name}}" data-item="{{item}}">{{item.value}}</view>
              </view>
            </view>
          </view>
          <wux-divider show-text="{{ false }}" />
          <view class="num-area">
            <view class="goods-num">数量</view>
            <wux-input-number controlled value="number" min="1" max="9999" color="dark" />
          </view>
          <wux-divider show-text="{{ false }}" />
        </wux-wing-blank>
      </scroll-view>
      <view class='pop-footer'>
        <button class="confirm-button" type="warn" disabled="{{addCartDisabled}}" bindtap="takeCart">加入购物车</button>
      </view>
    </view>
    <cartFabButton></cartFabButton>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import api from '@/api/api';
  import tip from '@/utils/tip';
  import cartFabButton from '@/components/cart_fab_button';
  export default class Example extends wepy.page {
    config = {
      navigationBarBackgroundColor: "#31312b",
      navigationBarTextStyle: "white",
      navigationBarTitleText: '商品详情',
      usingComponents: {
        'wux-tab': './../lib/wux/tab/index',
        'wux-tabs': './../lib/wux/tabs/index',
        'wux-divider': './../lib/wux/divider/index',
        'wux-white-space': './../lib/wux/white-space/index',
        'wux-wing-blank': './../lib/wux/wing-blank/index',
        'wux-button': './../lib/wux/button/index',
        'wux-icon': './../lib/wux/icon/index',
        'wux-input-number': './../lib/wux/input-number/index'
      }
    };
    data = {
      chooseSkuMap: new Map(),
      chooseSkuColor: {},
      chooseColorObject: {},
      chooseSkuStr: '',
      detail: {},
      images: [],
      goodsId: '',
      goodsDetailId: '',
      price: '',
      hidden: true,
      //动画效果
      animationData: '',
      addCartDisabled: true,
      currentTab: 'goodsInfo',
      winHeight: '100%',
      isFav: false,
      number: 1
    };
    components = {
      cartFabButton
    };
    methods = {
      chooseSku(e) {
        let cancel = false;
        let item = e.currentTarget.dataset.item;
        let key = e.currentTarget.dataset.itemkey;
        // 修改选中颜色
        if (this.chooseSkuColor[key]) {
          // 如果id相同，是取消选择操作
          if (this.chooseSkuColor[key] === item.id) {
            delete this.chooseColorObject['style' + this.chooseSkuColor[key]];
            delete this.chooseSkuColor[key];
            // this.chooseSkuColor.delete(key);
            cancel = true;
          } else {
            delete this.chooseColorObject['style' + this.chooseSkuColor[key]];
            this.chooseColorObject['style' + item.id] =
              'border:1px solid #e01f27;color:#fff;background-color:#e01f27;';
            // this.chooseSkuColor.set(key, item.id);
            this.chooseSkuColor[key] = item.id;
          }
        } else {
          this.chooseColorObject['style' + item.id] =
            'border:1px solid #e01f27;color:#fff;background-color:#e01f27;';
          // this.chooseSkuColor.set(key, item.id);
          this.chooseSkuColor[key] = item.id;
        }
        // 计算价格
        let skuSize = this.detail.goodsSkuList.length;
        if (cancel) {
          this.chooseSkuMap.delete(key);
        } else {
          this.chooseSkuMap.set(key, item.id);
        }
        if (this.chooseSkuMap.size === skuSize) {
          let goodsDetailList = this.detail.goodsDetailList;
          let chooseSkuIds = [...this.chooseSkuMap.values()];
          let detail = this.selectOneDetail(goodsDetailList, chooseSkuIds, 0);
          this.goodsDetailId = detail.id;
          this.price = detail.price;
          this.chooseSkuStr = '';
          let skus = [];
          for (let i in this.detail.goodsSkuList) {
            skus.push.apply(skus, this.detail.goodsSkuList[i].list);
          }
          for (let k in chooseSkuIds) {
            for (let j in skus) {
              if (chooseSkuIds[k] === skus[j].id) {
                this.chooseSkuStr = this.chooseSkuStr + skus[j].value + '、';
                break;
              }
            }
          }
          this.chooseSkuStr = this.chooseSkuStr.substr(
            0,
            this.chooseSkuStr.length - 1
          );
          this.addCartDisabled = false;
        } else {
          this.goodsDetailId = '';
          this.price = '';
          this.chooseSkuStr = '';
          this.addCartDisabled = true;
        }
        this.$apply();
      },
      previewImage(e) {
        let current = e.target.dataset.src;
        let imageArry = this.detail.images.split(',');
        wx.previewImage({
          current: current, // 当前显示图片的http链接
          urls: imageArry // 需要预览的图片http链接列表
        });
      },
      takeCartHandle() {
        this.showConfirmData();
      },
      async takeCart() {
        let resp = await api.shopCart.add({
          goodsDetailId: this.goodsDetailId,
          quantity: this.number
        })
        if (resp.code === 0) {
          tip.success("加入成功")
          this.closeTakeCartDialog()
        } else {
          tip.error('加入失败,请稍后重试')
          console.log(resp.msg)
        }
      },
      closeTakeCartDialog() {
        this.winHeight = '100%';
        this.hidden = true;
        this.$apply()
      },
      tabChange() {
        if (this.currentTab === 'goodsInfo') {
          this.currentTab = 'question';
        } else {
          this.currentTab = 'goodsInfo';
        }
        this.$apply();
      },
      favAction() {
        this.isFav = !this.isFav;
      }
    };
    closeTakeCartDialog() {
      this.winHeight = '100%';
      this.hidden = true;
      this.$apply()
    }
    selectOneDetail(goodsDetailList, skuIds, currentIndex) {
      if (goodsDetailList.length === 1) {
        return goodsDetailList[0];
      }
      console.log(goodsDetailList.length);
      console.log(skuIds);
      let tempList = goodsDetailList
        .filter(e => e.goodsSkuIds.indexOf(skuIds[currentIndex]) > -1)
        .concat();
      return this.selectOneDetail(tempList, skuIds, ++currentIndex);
    }
    async showConfirmData() {
      // this.animation.height('783rpx').step();
      this.setData({
        animationData: this.animation.translate(0, 0).export()
      });
      setTimeout(() => {
        this.hidden = false;
        let systemInfo = wepy.getStorageSync('systemInfo');
        this.winHeight = systemInfo.windowHeight;
        this.$apply();
      }, 100);
    }
    async getGoodsDetail() {
      let resp = await api.goods.detail({
        goodsId: this.goodsId
      });
      if (resp.code === 0) {
        this.detail = resp.data;
        this.images = this.detail.images.split(',');
        this.$apply();
      } else {
        tip(resp.msg, true);
      }
    }
    events = {};
    watch = {};
    computed = {};
    onLoad(options) {
      this.winHeight = '100%';
      this.goodsId = options.goodsId;
      this.getGoodsDetail();
    }
    onShow() {
      //创建动画
      var animation = wx.createAnimation({
        transformOrigin: '50% 50%',
        duration: 500,
        timingFunction: 'ease-in-out',
        delay: 0
      });
      this.animation = animation;
    }
  }
</script>

<style lang='less'>
  .container {
    height: 100%;
  }
  .swiper {
    height: 602rpx;
  }
  .slide-image {
    width: 100%;
    height: 100%;
  }
  .details-msg {
    border-top: 1px solid #ededed;
    padding: 20rpx 30rpx 10rpx;
    background: #fff;
    .details-title {
      // overflow: hidden;
      width: 100%;
      box-sizing: border-box;
      position: relative;
      font-size: 30rpx;
      color: #333;
    }
    .whitespace--default {
      background-color: #f3f3f1;
    }
    .details_pinfo {
      padding: 20rpx 0;
      position: relative;
      display: flex;
      align-items: center;
      .price {
        color: #e01f27;
        font-size: 36rpx;
      }
      .other-price {
        font-size: 28rpx;
        padding-left: 40rpx;
      }
      .icon-share {
        display: block;
        padding-bottom: 5rpx;
        font-size: 40rpx;
      }
    }
  }
  .desc-title {
    margin-top: 40rpx;
    font-size: 34rpx;
    color: #222425;
  }
  .desc-desc {
    font-size: 30rpx;
    color: #434547;
    margin-bottom: 30rpx;
  }
  .detail-image {
    width: 100%;
  }
  .detail-bottom {
    width: 100%;
    height: 150rpx;
    border-top: 1px solid #ededed;
    position: fixed;
    bottom: 0;
    background: #fff;
    z-index: 1001;
    .bottom-box {
      display: flex;
      align-items: center;
      justify-content: space-between;
      position: relative;
    }
    .c-add-cart-area {
      padding: 15rpx 40rpx;
      line-height: 60rpx;
      font-size: 30rpx;
      width: 50%;
      .c-add-cart-btn button {
        height: 88rpx;
        font-size: 36rpx;
        width: 320rpx;
        margin: 0 auto;
        background-color: #e01f27 !important;
        border-radius: 0;
      }
    }
  }
  .c-fav {
    width: 50%;
    .c-fav-item {
      width: 78rpx;
      margin: 0 auto;
      padding-bottom: 10rpx;
      .c-star-activity {
        color: #e01f27;
      }
    }
    .c-fav-font {
      font-size: 22rpx;
      text-align: center;
    }
    .c-fav-font-activity {
      font-size: 22rpx;
      color: #e01f27;
      text-align: center;
    }
  }
  ul li {
    list-style: none;
    font-size: 54rpx;
    padding-left: 5rpx;
    color: #ccc;
  }
  .c-star-area {
    margin: 0 auto;
    width: 58rpx;
  }
  .popup {
    position: fixed;
    z-index: 10;
    width: 100%; // height: 100vh;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    .pop-header {
      margin-top: 30vh;
      height: 14vh;
      display: flex;
      padding: 0 10px;
      background: #fff;
      .img {
        flex: 0 1 auto;
        width: 84px;
        height: 84px;
        margin-top: -15px;
        image {
          height: 84px;
          width: 84px;
          border: 6rpx solid #fff;
          border-radius: 4rpx;
        }
      }
      .close-icon {
        flex: 0 0 auto;
        padding-top: 20rpx;
        padding-left: 28rpx;
      }
      .goods {
        flex: 1 1 auto;
        padding: 10px 0 0 8px;
        font-size: 30rpx;
        .name {
          color: #1a1a1a;
        }
        .price {
          margin-top: 15rpx;
          color: #de0000;
          font-weight: 600;
        }
        .sku-desc {
          margin-top: 15rpx;
          color: #1a1a1a;
          font-size: 24rpx;
        }
      }
    }
    .pop-content {
      height: 48vh;
      background: #fff;
      .sku-box {
        color: #1a1a1a;
        .sku-item {
          display: flex;
          flex-wrap: wrap;
        }
        .sku-name {
          font-size: 30rpx;
          margin-right: 36rpx;
          padding-top: 10rpx;
        }
        .sku-items {
          display: flex;
          flex-wrap: wrap;
          view {
            font-size: 26rpx;
            line-height: 30rpx;
            padding: 15rpx 15rpx 15rpx 15rpx;
            border: 1px solid #979797;
            border-radius: 4px;
            margin-right: 13px;
            margin-bottom: 10px;
          }
        }
      }
      .num-area {
        display: flex;
        .goods-num {
          font-size: 30rpx;
          margin-right: 36rpx;
          padding-top: 8rpx;
        }
      }
    }
    .pop-footer {
      height: 150rpx;
      background: #fff;
      font-size: 18px;
      bottom: 0;
      .confirm-button {
        height: 88rpx;
        font-size: 36rpx;
        border-radius: 0;
      }
    }
  }
</style>